version: '3.8'

services:
  # Бэкенд Go приложение
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=lms
      - REDIS_URL=redis-backend:6379
      - REDIS_PASSWORD=
      - MINIO_ENDPOINT=minio-1:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - KAFKA_ADDRESS=kafka:9092
      - ES=http://elasticsearch:9200
      - PASS_ES=r7Bvq3U5iQHitPm32Pye
      - PYTHON_SUM=http://main-1:8000
      - PYTHON_CHAT=http://chat-1:8001
      - SECRET=8Jk2k3n4l5m6n7o8p9q0r1s2t3u4v5w6
      - EMAILPASS=jonpqlpzmamiourl
      - EMAIL=vlvlms666666@gmail.com
      - SMTP=smtp.gmail.com
      - SMTP_ADDR=smtp.gmail.com:587
      - UNECON_ADMIN=spbgeua@gmail.com
      - SPBPU_ADMIN=spbpua@gmail.com
      - ITMO_ADMIN=itmoa3280@gmail.com
    depends_on:
      - redis-backend
      - kafka
      - postgres
      - elasticsearch
    networks:
      - backend-network
      - external-network

  # Свой Redis для бэкенда
  redis-backend:
    image: redis:alpine
    ports:
      - "6380:6379"
    volumes:
      - redis-backend-data:/data
    restart: unless-stopped
    networks:
      - backend-network

  # PostgreSQL
  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=lms
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - backend-network

  # Elasticsearch
  elasticsearch:
    image: bitnami/elasticsearch:7.14.0
    environment:
      - ELASTICSEARCH_HEAP_SIZE=512m
      - ELASTICSEARCH_PASSWORD=r7Bvq3U5iQHitPm32Pye
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch-data:/bitnami/elasticsearch/data
    restart: unless-stopped
    networks:
      - backend-network

  # Zookeeper
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    restart: unless-stopped
    networks:
      - backend-network

  # Kafka
  kafka:
    image: confluentinc/cp-kafka:7.3.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    restart: unless-stopped
    networks:
      - backend-network

volumes:
  postgres-data:
  redis-backend-data:
  elasticsearch-data:

networks:
  backend-network:
    driver: bridge
  external-network:
    external: true
    name: python-lms_default